# generated by datamodel-codegen:
#   filename:  option_chain_response.json
#   timestamp: 2023-01-03T20:18:23+00:00

from __future__ import annotations

from enum import Enum
from typing import Dict, List, Optional

from pydantic import BaseModel


class Strategy1(str, Enum):
    SINGLE = 'SINGLE'
    ANALYTICAL = 'ANALYTICAL'
    COVERED = 'COVERED'
    VERTICAL = 'VERTICAL'
    CALENDAR = 'CALENDAR'
    STRANGLE = 'STRANGLE'
    STRADDLE = 'STRADDLE'
    BUTTERFLY = 'BUTTERFLY'
    CONDOR = 'CONDOR'
    DIAGONAL = 'DIAGONAL'
    COLLAR = 'COLLAR'
    ROLL = 'ROLL'


class PutCall1(str, Enum):
    PUT = 'PUT'
    CALL = 'CALL'


class OptionDeliverablesListItem(BaseModel):
    symbol: Optional[str] = None
    assetType: Optional[str] = None
    deliverableUnits: Optional[str] = None
    currencyType: Optional[str] = None


class Option(BaseModel):
    putCall: Optional[PutCall1] = None
    symbol: Optional[str] = None
    description: Optional[str] = None
    exchangeName: Optional[str] = None
    bidPrice: Optional[float] = None
    askPrice: Optional[float] = None
    lastPrice: Optional[float] = None
    markPrice: Optional[float] = None
    bidSize: Optional[int] = None
    askSize: Optional[int] = None
    lastSize: Optional[int] = None
    highPrice: Optional[float] = None
    lowPrice: Optional[float] = None
    openPrice: Optional[float] = None
    closePrice: Optional[float] = None
    totalVolume: Optional[int] = None
    quoteTimeInLong: Optional[int] = None
    tradeTimeInLong: Optional[int] = None
    netChange: Optional[float] = None
    volatility: Optional[float] = None
    delta: Optional[float] = None
    gamma: Optional[float] = None
    theta: Optional[float] = None
    vega: Optional[float] = None
    rho: Optional[float] = None
    timeValue: Optional[float] = None
    openInterest: Optional[float] = None
    isInTheMoney: Optional[bool] = None
    theoreticalOptionValue: Optional[float] = None
    theoreticalVolatility: Optional[float] = None
    isMini: Optional[bool] = None
    isNonStandard: Optional[bool] = None
    optionDeliverablesList: Optional[List[OptionDeliverablesListItem]] = None
    strikePrice: Optional[float] = None
    expirationDate: Optional[str] = None
    expirationType: Optional[str] = None
    multiplier: Optional[float] = None
    settlementType: Optional[str] = None
    deliverableNote: Optional[str] = None
    isIndexOption: Optional[bool] = None
    percentChange: Optional[float] = None
    markChange: Optional[float] = None
    markPercentChange: Optional[float] = None


class ExchangeName(str, Enum):
    IND = 'IND'
    ASE = 'ASE'
    NYS = 'NYS'
    NAS = 'NAS'
    NAP = 'NAP'
    PAC = 'PAC'
    OPR = 'OPR'
    BATS = 'BATS'


class Underlying(BaseModel):
    ask: Optional[float] = None
    askSize: Optional[int] = None
    bid: Optional[float] = None
    bidSize: Optional[int] = None
    change: Optional[float] = None
    close: Optional[float] = None
    delayed: Optional[bool] = None
    description: Optional[str] = None
    exchangeName: Optional[ExchangeName] = None
    fiftyTwoWeekHigh: Optional[float] = None
    fiftyTwoWeekLow: Optional[float] = None
    highPrice: Optional[float] = None
    last: Optional[float] = None
    lowPrice: Optional[float] = None
    mark: Optional[float] = None
    markChange: Optional[float] = None
    markPercentChange: Optional[float] = None
    openPrice: Optional[float] = None
    percentChange: Optional[float] = None
    quoteTime: Optional[int] = None
    symbol: Optional[str] = None
    totalVolume: Optional[int] = None
    tradeTime: Optional[int] = None


class ExpirationDate(BaseModel):
    date: Optional[str] = None


class OptionDeliverables(BaseModel):
    symbol: Optional[str] = None
    assetType: Optional[str] = None
    deliverableUnits: Optional[str] = None
    currencyType: Optional[str] = None


class OptionChainOutput(BaseModel):
    symbol: str
    status: Optional[str] = None
    underlying: Optional[Underlying] = None
    strategy: Optional[Strategy1] = None
    interval: Optional[float] = None
    isDelayed: Optional[bool] = None
    isIndex: Optional[bool] = None
    daysToExpiration: float
    interestRate: float
    underlyingPrice: float
    volatility: float
    callExpDateMap: Dict[str, Dict[str, List[Option]]]
    putExpDateMap: Dict[str, Dict[str, List[Option]]]


class OptionChainResponse(BaseModel):
    output: OptionChainOutput
